services:
    mongo:
      image: mongo
      restart: always
      ports:
        - 27017:27017
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: example

    mongo-express:
      image: mongo-express
      restart: always
      ports:
        - 8081:8081
      environment:
        ME_CONFIG_MONGODB_ADMINUSERNAME: root
        ME_CONFIG_MONGODB_ADMINPASSWORD: example
        ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

    zookeeper:
      image: docker.io/bitnami/zookeeper:3.7
      ports:
        - "2181:2181"
      volumes:
        - "zookeeper_data:/bitnami"
      environment:
        - ALLOW_ANONYMOUS_LOGIN=yes
    kafka:
      image: docker.io/bitnami/kafka:3
      ports:
        - "9092:9092"
      volumes:
        - "kafka_data:/bitnami"
      environment:
        - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
        - ALLOW_PLAINTEXT_LISTENER=yes
      depends_on:
        - zookeeper
    kafka-ui:
      image: provectuslabs/kafka-ui
      container_name: kafka-ui
      ports:
        - "8080:8080"
      restart: always
      environment:
        - KAFKA_CLUSTERS_0_NAME=kafka
        - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
        - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

    customer-webserver:
      image: karenjoseph89/customer-webserver:1.0.0
      restart: always
      ports:
        - 5000:5000
      depends_on:
        - kafka
        - mongo
    customer-management:
      image: karenjoseph89/customer-management:1.0.0
      restart: always
      ports:
        - 5001:5001
      depends_on:
        - kafka
        - mongo

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

